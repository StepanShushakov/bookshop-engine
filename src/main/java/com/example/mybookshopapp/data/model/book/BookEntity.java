package com.example.mybookshopapp.data.model.book;


import com.example.mybookshopapp.data.model.author.AuthorEntity;
import com.example.mybookshopapp.data.model.book.file.FileDownloadEntity;
import com.example.mybookshopapp.data.model.book.review.BookReviewEntity;
import com.example.mybookshopapp.data.model.genre.GenreEntity;
import com.example.mybookshopapp.data.model.payments.BalanceTransactionEntity;
import com.example.mybookshopapp.data.model.user.UserEntity;
import com.fasterxml.jackson.annotation.JsonIgnore;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * @author karl
 */

@Entity
@Table(name="book")
@ApiModel(description = "entity representing a book")
@Getter
@Setter
public class BookEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @ApiModelProperty("id generated by automatically")
    private Integer id;

    @Column(name = "pub_date", columnDefinition = "DATE NOT NULL")
    @ApiModelProperty("date of book publication")
    private Date pubDate;

    @Column(name = "is_bestseller", columnDefinition = "SMALLINT NOT NULL")
    @ApiModelProperty("if isBestseller = 1 so book is considered to be bestseller and if 0 the book is not a bestseller")
    private short isBestseller;

    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("mnemonical identity of sequence of characters")
    private String slug;

    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("book title")
    private String title;

    @Column(columnDefinition = "VARCHAR(255)")
    @ApiModelProperty("image url")
    private String image;

    @Column(columnDefinition = "TEXT")
    @ApiModelProperty("book description")
    private String description;

    @Column(nullable = false)
    @ApiModelProperty("book price without discount")
    private int price;

    @Column(columnDefinition = "SMALLINT NOT NULL  DEFAULT 0")
    @ApiModelProperty("discount value for book")
    private short discount;

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "book2author", joinColumns = @JoinColumn(name = "book_id"), inverseJoinColumns = @JoinColumn(name = "author_id"))
    private List<AuthorEntity> authors = new ArrayList<>();

    @ManyToMany
    @JoinTable(name = "book2genre", joinColumns = @JoinColumn(name = "book_id"), inverseJoinColumns = @JoinColumn(name = "genre_id"))
    private List<GenreEntity> genres = new ArrayList<>();

    @ManyToMany
    @JoinTable(name = "book2user", joinColumns = @JoinColumn(name = "book_id"), inverseJoinColumns = @JoinColumn(name = "user_id"))
    @JsonIgnore
    private List<UserEntity> users = new ArrayList<>();

    @ManyToMany
    @JoinTable(name = "book2tag", joinColumns = @JoinColumn(name = "book_id"), inverseJoinColumns = @JoinColumn(name = "tag_id"))
    @JsonIgnore
    private List<TagEntity> tags = new ArrayList<>();

    @OneToMany(mappedBy = "book")
    private List<FileDownloadEntity> fileDownloads;

    @OneToMany(mappedBy = "book")
    private List<BalanceTransactionEntity> balanceTransactions;

    @OneToMany(mappedBy = "book")
    private List<BookReviewEntity> bookReviews;

    @OneToMany(mappedBy = "bookEntity")
    private List<BookFileEntity> booksFileEntitiesList = new ArrayList<>();

    @OneToMany(mappedBy = "book")
    private List<BookRatingEntity> bookRatingEntityList;
}
